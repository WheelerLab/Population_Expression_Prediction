#These notes were formed in re-running both LWK and MKK.
#POP represents any of the 7 HapMap3 Populations used.

1) a) Copy the HapMap3 Genotype Data into own directory.
    '/home/wheelerlab1/Data/Stranger_et_al_pop_eQTLs/HapMap3-genotypes/hapmap3_r2_b36_fwd.consensus.qc.poly.bed'
    '/home/wheelerlab1/Data/Stranger_et_al_pop_eQTLs/HapMap3-genotypes/hapmap3_r2_b36_fwd.consensus.qc.poly.bim'
    '/home/wheelerlab1/Data/Stranger_et_al_pop_eQTLs/HapMap3-genotypes/hapmap3_r2_b36_fwd.consensus.qc.poly.fam'
    
  b) Copy Stranger Gene Expression Data into own directory.
    '/home/wheelerlab1/Data/Stranger_et_al_pop_eQTLs/7-HapMap3-pops-exp/E-MTAB-264.processed.1/POP_p3.expression'
    
  c) Make a POP.list of the population's samples by FID and IID.
    Use 'head POP_p3_expression.txt' to copy the list of the population samples.
    Make the POP.txt using nano by copying these samples into the file, and seperating them by line.
        Example:  NA19027
                  NA19028
                  NA19031
                  NA19035
                  NA19036
                  etc.
        ***It may be useful to note how many lines are in this file, as it shows the number of people we have expression data for.
    In R:
        'library(dplyr)
         Poplist <- read.table('MKK.txt')
         Poplist <- dplyr::mutate(Poplist, V2 = V1)
         fam <- read.table('hapmap3_r2_b36_fwd.consensus.qc.poly.fam')
         
         #these lines remove those with parents
         fam1 <- dplyr::filter(fam, V3 == 0)
         fam1 <- dplyr::filter(fam1, V4 == 0)
         
         combined <- dplyr::left_join(Poplist, fam1, by = 'V2')
         newlist <- dplyr::select(combined, V1.y, V2)
         write.table(newlist, file='POP.list', quote = F, row.names = F, col.names = F)'
    

2) Use liftOver to update reference build from hg18 to hg19.
    a) Create the ".bed file" using R so it is in the proper format for use in liftOver.
        This file is not the actual 'hapmap3_r2_b36_fwd.consensus.qc.poly.bed' file, but is made. 
        Use my '0100_update_bed_file_liftover.R' script in my Population_Expression_Prediction respository.
            Example Output File:    chr1    743267  743268  rs3115860
                                    chr1    766408  766409  rs12124819
                                    chr1    773885  773886  rs17160939
        Output file will be named 'POP_liftOver.bed' using script.
        
    b) Run liftOver.
        You first need to download and save the hg18ToHg19.over.chain.gz file to your directory. Also make sure it is gzipped.
            Get this file from (http://hgdownload.cse.ucsc.edu/goldenPath/hg18/liftOver/hg18ToHg19.over.chain.gz)
        'liftOver POP_liftOver.bed hg18ToHg19.over.chain.gz output.bed unlifted.bed'
            This page is helpful if you have questions: (http://genome.sph.umich.edu/wiki/LiftOver)
        
 3) Update the HapMap3 Genotype Data files (.bed, .bim, .fam) so they are population specific.
        Use Plink, and 'POP.list' with --keep tag, as those are the samples we have expression data for.
        'plink --bfile hapmap3_r2_b36_fwd.consensus.qc.poly --keep POP.list --make-bed --out POP_hapmap3_r2_b36_fwd.consensus.qc.poly'
        ***Again, note how many people pass filters and QC. It may not be the same number as the people in 'POP.list'.
 
 4) Update .bim file to remove unlifted SNPs and update positions after liftOver.
        a) Use '0200_List_of_Unlifted.R' to create a list of unlifted SNPs, 'Unlifted_SNPs.txt'.
        
        b) Use with --exclude tag (Plink)
            'plink --bfile POP_hapmap3_r2_b36_fwd.consensus.qc.poly --exclude Unlifted_SNPs.txt --make-bed --out POP_Removed_Unlifted'
            Now have POP_Removed_Unlifted.bed, POP_Removed_Unlifted.bim, POP_Removed_Unlifted.fam.
        
        c) Use '0300_Update_Position.R' to update POP_Removed_Unlifted.bim with the new positions from liftOver.
            Output from this script is 'POP_Removed_Unlifted_New_Position.bim'.
            It is helpful to then re-name 'POP_Removed_Unlifted.bed', and 'POP_Removed_Unlifted.fam' to 'POP_Removed_Unlifted_New_Position' as well.

5) Figure out which samples were sequenced via 1000 Genomes Project and remove them.
    a) Use '01_EXP_vs_TGP_script.R' to figure out which samples have been sequenced through TGP and which need to be imputed.
        Output files are 'POPfound.txt', or samples that were sequenced, and 'POPimpute.txt', or samples that need to be imputed.
        ***No samples from MKK were sequenced and all had to be imputed. This is the only population that had to be entirely imputed.
        
    b) Use '04_Create_FID-IID_List_of_Sequenced_Samples.R' to create a list of those that were sequenced organized by FID and IID.
        Output file is 'POP_Sequenced.txt'.
    
    c) Remove list of sequenced samples using Plink.
        'plink --bfile POP_Removed_Unlifted_New_Position --remove POP_Sequenced.txt --make-bed --out POP_Removed_Unlifted_New_Position_Removed_Sequenced'

6) GWAS QC
    Use 'GWAS_QC/Scripts-from-Wheeler/plink_QC.sh'. Modify lines of code as needed from her original script. 
        --bfiles are 'POP_Removed_Unlifted_New_Position_Removed_Sequenced'

7) Generate frequency file and run the pre-imputation check.
    a) Use plink to generate frequency file 'POP.frq'.
        'plink --bfile POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01 --keep POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01.fam --freq --out POP'
    
    b) Use '15_HRC-1000G-check.bim.pl' to run the pre-imputation check. With -p flag, use population region (African, American, European, East Asian, South Asian). AFR used here as an example.
        'perl HRC-1000G-check.bim.pl -b POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01.bim -f POP.frq --1000g -p AFR'
            This script generates a 'Run-plink.sh' used to update the files appropriately for imputation.
         
    c) Run 'Run-plink.sh'.
        Outputs for each chromosome:
            POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01-updated-chr1.bed
            POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01-updated-chr1.bim
            POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01-updated-chr1.fam
            POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01-updated-chr1.log
        Will output for chromosome 23 also, but you can just delete this. We all need 1-22.

8)  a) Generate the '.vcf' files for the 22 chromosomes we need to impute.
    'for i in {1..22}; do plink --bfile POP_Removed_Unlifted_New_Position_Removed_Sequenced.geno0.01-updated-chr${i} --recode vcf --out POPFinal.chr${i} --chr chr${i}; done'
        Outputs for each chromosome:
            POPFinal.chr1.vcf
            POPFinal.chr1.log
    
    b) Sort and gzip the '.vcf' files.
        'for i in {1..22}; do vcf-sort POPFinal.chr${i}.vcf | bgzip -c > POP_chr${i}.vcf.gz; done'
            Sorts and outputs for each chromosome:
                POP_chr1.vcf.gz

9) Submit these files for imputation via the Michigan Online Imputation Server.
